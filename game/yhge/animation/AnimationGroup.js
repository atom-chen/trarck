/** * 对于帧率相同的动画，只计算一次时间到帧的转换。在组中的animation只要使用这个计算结果，像flash一样。 */ (function () {    var MaxDeltaFrame=50;    var AnimationGroup=yhge.core.Class(yhge.core.Accessor,{        classname:"AnimationGroup",        _elapsed:0,        _duration:0,        _frame:0,        _nextFrame:0,        _frameRate:60,        _frameSkipAble:true,        _root:null,//root movieclip        initialize: function(props) {            this._animations=[];            this.setAttributes(props);            this._maxDelta=MaxDeltaFrame*1000/this._frameRate;        },        update:function(delta){            //主时间轴始终可用，当处理暂停状态是，整个时钟会停止。            if(this._frameSkipAble){                if(delta>this._maxDelta) delta=this._duration;//                //累加式//                var deltaFrame=Math.round(delta*this._frameRate/1000);//                if(deltaFrame>0){//                    this._root.update(delta,deltaFrame);//                    this._frame+=deltaFrame;//                }                //统计式。delta累积起来，消除单次的误差。                this._elapsed+=delta;                this._nextFrame=Math.floor(this._elapsed*this._frameRate/1000);                if(this._nextFrame>this._frame){                    for(var deltaFrame=this._nextFrame-this._frame, i=0,l=this._animations.length;i<l;i++){                        this._animations[i].updateGroup(delta,deltaFrame);                    }                    this._frame=this._nextFrame;                }            }else{                this._frame++;                for(var i=0,l=this._animations.length;i<l;i++){                    this._animations[i].updateGroup(delta,1);                }            }        },        //rate的单位是HZ        setFrameRate:function (rate) {            this._frameRate=rate;            this._duration=1000/rate;            return this;        },        getFrameRate:function(){            return this._frameRate;        },        //duration单位是毫秒        setDuration:function (duration) {            this._frameRate=1000/duration;            this._duration=duration;            return this;        },        getDuration:function(){            return this._duration;        },        add:function  (animation) {//            //不作duration检查//            var duration=animation.getDuration();//            if(duration && duration!=this._duration) throw "duration non't same." ;            if(this._animations.indexOf(animation)>-1) throw "animation already in group";            this._animations.push(animation);            return this;        },        remove:function  (animation) {            for(var i=0,l=this._animations.length;i<l;i++){                if(this._animations[i]==animation){                    this._animations.splice(i,1);                }            }            return this;        }    });    yhge.animation.AnimationGroup=AnimationGroup;})();
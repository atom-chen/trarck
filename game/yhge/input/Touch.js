(function  () {    var UIEventListenerManager  =yhge.event.UIEventListenerManager;    var TouchEventObject  = yhge.event.TouchEventObject;    /**     * 这里是单点触摸，和鼠标事件类似，move不同。使用不同的方法名     */    /**     *使用自定义事件管理器处理canvas事件     */    yhge.input.setupTouchEvent=function(canvas){        canvas=canvas;        var offset=getOffset(canvas);        //canvas 事件 可由最底层的scene事件代替。        canvas.ontouchstart=function(e){            var touch=e.touches[0];            var e=new TouchEventObject(e.type,true,true,touch.pageX-offset.left,touch.pageY-offset.top);            UIEventListenerManager.handleEvent(canvas,e);        };        canvas.ontouchend=function(e){            var touch=e.changedTouches[0];            var e=new TouchEventObject(e.type,true,true,touch.pageX-offset.left,touch.pageY-offset.top);            UIEventListenerManager.handleEvent(canvas,e);        };        //TODO 省略一些move事件        canvas.ontouchmove=function(e){            var touch=e.touches[0];            var e=new TouchEventObject(e.type,true,true,touch.pageX-offset.left,touch.pageY-offset.top);            UIEventListenerManager.handleEvent(canvas,e);                    };        canvas.ontouchcancel=function(e){            var touch=e.changedTouches[0];            var e=new TouchEventObject(e.type,true,true,touch.pageX-offset.left,touch.pageY-offset.top);            UIEventListenerManager.handleEvent(canvas,e);        };    };    /**     *使用代理方式处理canvas事件，支持多个代理者     */    yhge.input.setupTouchEventWithProcessor=function(canvas,processor){        canvas=canvas;        processor=processor;        var offset=getOffset(canvas);        //canvas 事件 可由最底层的scene事件代替。        processor.didTouchStart &&        canvas.addEventListener("touchstart",function(e){            var touch=e.touches[0];            processor.didTouchStart(touch.pageX-offset.left,touch.pageY-offset.top);        });        processor.didTouchEnd &&            canvas.addEventListener("touchend",function(e){            var touch=e.changedTouches[0];            processor.didTouchEnd(touch.pageX-offset.left,touch.pageY-offset.top);        });        //TODO 省略一些move事件        processor.didTouchMove &&        canvas.addEventListener("touchmove",function(e){            var touch=e.touches[0];            processor.didTouchMove(touch.pageX-offset.left,touch.pageY-offset.top);                   });        processor.didTouchCancel &&        canvas.addEventListener("touchcancel",function(e){            var touch=e.changedTouches[0];            processor.didTouchCancel(touch.pageX-offset.left,touch.pageY-offset.top);        });    };    /**     *使用代理方式处理canvas事件，支持单个代理者     */    yhge.input.setupTouchEventWithSingleProcessor=function(canvas,processor){        canvas=canvas;        processor=processor;        var offset=getOffset(canvas);        //canvas 事件 可由最底层的scene事件代替。                if(processor.didTouchStart)        canvas.ontouchstart=function(e){            var touch=e.touches[0];            processor.didTouchStart(touch.pageX-offset.left,touch.pageY-offset.top);        };        if(processor.didTouchEnd )        canvas.ontouchend=function(e){            var touch=e.changedTouches[0];            processor.didTouchEnd(touch.pageX-offset.left,touch.pageY-offset.top);        };        //TODO 省略一些move事件        if(processor.didTouchMove )        canvas.ontouchmove=function(e){            var touch=e.touches[0];            processor.didTouchMove(touch.pageX-offset.left,touch.pageY-offset.top);                   };        if(processor.didTouchCancel)        canvas.ontouchcancel=function(e){            var touch=e.changedTouches[0];            processor.didTouchCancel(touch.pageX-offset.left,touch.pageY-offset.top);        };    };    function getOffset(ele){        var left=ele.offsetLeft,top=ele.offsetTop;        var p=ele.offsetParent;        while(p){            left+=p.offsetLeft;            top+=p.offsetTop;            p=p.offsetParent;        }        return {left:left,top:top};    }})();